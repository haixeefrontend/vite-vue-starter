diff --git a/dist/worker.mjs b/dist/worker.mjs
index eba84fb8fc1a57b31a23954a36585bedece7dfc7..9a0c44b046a94e2e9379acfe4b03beaa01d934f1 100644
--- a/dist/worker.mjs
+++ b/dist/worker.mjs
@@ -1,9 +1,11 @@
+import { createRequire } from 'node:module';
 import process from 'node:process';
-import { loadConfig } from '@unocss/config';
-import { parseVariantGroup, notNull, collapseVariantGroup, createGenerator } from '@unocss/core';
-import { runAsWorker } from 'synckit';
+// import { loadConfig } from '@unocss/config';
+// import { parseVariantGroup, notNull, collapseVariantGroup, createGenerator } from '@unocss/core';
+// import { runAsWorker } from 'synckit';
 
 async function sortRules(rules, uno) {
+  const { parseVariantGroup, notNull, collapseVariantGroup } = await import('@unocss/core');
   const unknown = [];
   if (!uno.config.details)
     uno.config.details = true;
@@ -34,13 +36,13 @@ var _a;
 const promises = /* @__PURE__ */ new Map();
 (_a = process.env).ESLINT || (_a.ESLINT = "true");
 async function _getGenerator(configPath) {
-  const { config, sources } = await loadConfig(
+  const { config, sources } = await (await import('@unocss/config')).loadConfig(
     process.cwd(),
     configPath
   );
   if (!sources.length)
     throw new Error("[@unocss/eslint-plugin] No config file found, create a `uno.config.ts` file in your project root and try again.");
-  return createGenerator({
+  return (await import('@unocss/core')).createGenerator({
     ...config,
     warn: false
   });
@@ -100,6 +102,8 @@ async function runAsync(configPath, action, ...args) {
 function run(configPath, action, ...args) {
   return runAsync(configPath, action, ...args);
 }
-runAsWorker(run);
+
+const require = createRequire(import.meta.url);
+require('synckit').runAsWorker(run);
 
 export { getGenerator, run, runAsync, setGenerator };
